<Type Name="ArmEnergyServicesModelFactory" FullName="Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmEnergyServicesModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmEnergyServicesModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmEnergyServicesModelFactory" />
  <TypeSignature Language="F#" Value="type ArmEnergyServicesModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DataPartition">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EnergyServices.Models.DataPartition DataPartition (string name = default, string provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EnergyServices.Models.DataPartition DataPartition(string name, string provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.DataPartition(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataPartition (Optional name As String = Nothing, Optional provisioningState As String = Nothing) As DataPartition" />
      <MemberSignature Language="F#" Value="static member DataPartition : string * string -&gt; Azure.ResourceManager.EnergyServices.Models.DataPartition" Usage="Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.DataPartition (name, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EnergyServices.Models.DataPartition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the data partition. </param>
        <param name="provisioningState"> Name of the data partition. </param>
        <summary> Initializes a new instance of DataPartition. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.EnergyServices.Models.DataPartition" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataPartitionsListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EnergyServices.Models.DataPartitionsListResult DataPartitionsListResult (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.EnergyServices.Models.DataPartition&gt; dataPartitionInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EnergyServices.Models.DataPartitionsListResult DataPartitionsListResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.EnergyServices.Models.DataPartition&gt; dataPartitionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.DataPartitionsListResult(System.Collections.Generic.IEnumerable{Azure.ResourceManager.EnergyServices.Models.DataPartition})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataPartitionsListResult (Optional dataPartitionInfo As IEnumerable(Of DataPartition) = Nothing) As DataPartitionsListResult" />
      <MemberSignature Language="F#" Value="static member DataPartitionsListResult : seq&lt;Azure.ResourceManager.EnergyServices.Models.DataPartition&gt; -&gt; Azure.ResourceManager.EnergyServices.Models.DataPartitionsListResult" Usage="Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.DataPartitionsListResult dataPartitionInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EnergyServices.Models.DataPartitionsListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataPartitionInfo" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.EnergyServices.Models.DataPartition&gt;" />
      </Parameters>
      <Docs>
        <param name="dataPartitionInfo"> List of data partitions along with their properties in a given OEP resource. </param>
        <summary> Initializes a new instance of DataPartitionsListResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.EnergyServices.Models.DataPartitionsListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnergyServiceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EnergyServices.EnergyServiceData EnergyServiceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EnergyServices.EnergyServiceData EnergyServiceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.EnergyServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnergyServiceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As EnergyServiceProperties = Nothing) As EnergyServiceData" />
      <MemberSignature Language="F#" Value="static member EnergyServiceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties -&gt; Azure.ResourceManager.EnergyServices.EnergyServiceData" Usage="Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.EnergyServiceData (id, name, resourceType, systemData, tags, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EnergyServices.EnergyServiceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties" />
        <summary> Initializes a new instance of EnergyServiceData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnergyServiceNameAvailabilityResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult EnergyServiceNameAvailabilityResult (bool? nameAvailable = default, Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameUnavailableReason? reason = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult EnergyServiceNameAvailabilityResult(valuetype System.Nullable`1&lt;bool&gt; nameAvailable, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameUnavailableReason&gt; reason, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.EnergyServiceNameAvailabilityResult(System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameUnavailableReason},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnergyServiceNameAvailabilityResult (Optional nameAvailable As Nullable(Of Boolean) = Nothing, Optional reason As Nullable(Of EnergyServiceNameUnavailableReason) = Nothing, Optional message As String = Nothing) As EnergyServiceNameAvailabilityResult" />
      <MemberSignature Language="F#" Value="static member EnergyServiceNameAvailabilityResult : Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameUnavailableReason&gt; * string -&gt; Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult" Usage="Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.EnergyServiceNameAvailabilityResult (nameAvailable, reason, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameAvailable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="reason" Type="System.Nullable&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameUnavailableReason&gt;" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nameAvailable"> Indicates if the resource name is available. </param>
        <param name="reason"> The reason why the given name is not available. </param>
        <param name="message"> Detailed reason why the given name is available. </param>
        <summary> Initializes a new instance of EnergyServiceNameAvailabilityResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnergyServiceProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties EnergyServiceProperties (string dnsName = default, Azure.ResourceManager.EnergyServices.Models.ProvisioningState? provisioningState = default, string authAppId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.EnergyServices.Models.DataPartitionName&gt; dataPartitionNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties EnergyServiceProperties(string dnsName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.EnergyServices.Models.ProvisioningState&gt; provisioningState, string authAppId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.EnergyServices.Models.DataPartitionName&gt; dataPartitionNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.EnergyServiceProperties(System.String,System.Nullable{Azure.ResourceManager.EnergyServices.Models.ProvisioningState},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.EnergyServices.Models.DataPartitionName})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnergyServiceProperties (Optional dnsName As String = Nothing, Optional provisioningState As Nullable(Of ProvisioningState) = Nothing, Optional authAppId As String = Nothing, Optional dataPartitionNames As IEnumerable(Of DataPartitionName) = Nothing) As EnergyServiceProperties" />
      <MemberSignature Language="F#" Value="static member EnergyServiceProperties : string * Nullable&lt;Azure.ResourceManager.EnergyServices.Models.ProvisioningState&gt; * string * seq&lt;Azure.ResourceManager.EnergyServices.Models.DataPartitionName&gt; -&gt; Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties" Usage="Azure.ResourceManager.EnergyServices.Models.ArmEnergyServicesModelFactory.EnergyServiceProperties (dnsName, provisioningState, authAppId, dataPartitionNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.EnergyServices.Models.ProvisioningState&gt;" />
        <Parameter Name="authAppId" Type="System.String" />
        <Parameter Name="dataPartitionNames" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.EnergyServices.Models.DataPartitionName&gt;" />
      </Parameters>
      <Docs>
        <param name="dnsName" />
        <param name="provisioningState" />
        <param name="authAppId" />
        <param name="dataPartitionNames" />
        <summary> Initializes a new instance of EnergyServiceProperties. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.EnergyServices.Models.EnergyServiceProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
