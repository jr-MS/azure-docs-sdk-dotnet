<Type Name="ArmConfluentModelFactory" FullName="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmConfluentModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmConfluentModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmConfluentModelFactory" />
  <TypeSignature Language="F#" Value="type ArmConfluentModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConfluentAgreement">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ConfluentAgreement ConfluentAgreement (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string publisher = default, string product = default, string plan = default, string licenseTextLink = default, string privacyPolicyLink = default, DateTimeOffset? retrieveOn = default, string signature = default, bool? isAccepted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ConfluentAgreement ConfluentAgreement(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string publisher, string product, string plan, string licenseTextLink, string privacyPolicyLink, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; retrieveOn, string signature, valuetype System.Nullable`1&lt;bool&gt; isAccepted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentAgreement(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentAgreement (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional publisher As String = Nothing, Optional product As String = Nothing, Optional plan As String = Nothing, Optional licenseTextLink As String = Nothing, Optional privacyPolicyLink As String = Nothing, Optional retrieveOn As Nullable(Of DateTimeOffset) = Nothing, Optional signature As String = Nothing, Optional isAccepted As Nullable(Of Boolean) = Nothing) As ConfluentAgreement" />
      <MemberSignature Language="F#" Value="static member ConfluentAgreement : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * string * string * Nullable&lt;DateTimeOffset&gt; * string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Confluent.Models.ConfluentAgreement" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentAgreement (id, name, resourceType, systemData, publisher, product, plan, licenseTextLink, privacyPolicyLink, retrieveOn, signature, isAccepted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ConfluentAgreement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="publisher" Type="System.String" />
        <Parameter Name="product" Type="System.String" />
        <Parameter Name="plan" Type="System.String" />
        <Parameter Name="licenseTextLink" Type="System.String" />
        <Parameter Name="privacyPolicyLink" Type="System.String" />
        <Parameter Name="retrieveOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="signature" Type="System.String" />
        <Parameter Name="isAccepted" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="publisher"> Publisher identifier string. </param>
        <param name="product"> Product identifier string. </param>
        <param name="plan"> Plan identifier string. </param>
        <param name="licenseTextLink"> Link to HTML with Microsoft and Publisher terms. </param>
        <param name="privacyPolicyLink"> Link to the privacy policy of the publisher. </param>
        <param name="retrieveOn"> Date and time in UTC of when the terms were accepted. This is empty if Accepted is false. </param>
        <param name="signature"> Terms signature. </param>
        <param name="isAccepted"> If any version of the terms have been accepted, otherwise false. </param>
        <summary> Initializes a new instance of ConfluentAgreement. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentAgreement" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentOfferDetail">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail ConfluentOfferDetail (string publisherId = default, string id = default, string planId = default, string planName = default, string termUnit = default, Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus? status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail ConfluentOfferDetail(string publisherId, string id, string planId, string planName, string termUnit, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus&gt; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOfferDetail(System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentOfferDetail (Optional publisherId As String = Nothing, Optional id As String = Nothing, Optional planId As String = Nothing, Optional planName As String = Nothing, Optional termUnit As String = Nothing, Optional status As Nullable(Of ConfluentSaaSOfferStatus) = Nothing) As ConfluentOfferDetail" />
      <MemberSignature Language="F#" Value="static member ConfluentOfferDetail : string * string * string * string * string * Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus&gt; -&gt; Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOfferDetail (publisherId, id, planId, planName, termUnit, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="planName" Type="System.String" />
        <Parameter Name="termUnit" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="publisherId"> Publisher Id. </param>
        <param name="id"> Offer Id. </param>
        <param name="planId"> Offer Plan Id. </param>
        <param name="planName"> Offer Plan Name. </param>
        <param name="termUnit"> Offer Plan Term unit. </param>
        <param name="status"> SaaS Offer Status. </param>
        <summary> Initializes a new instance of ConfluentOfferDetail. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentOrganizationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.ConfluentOrganizationData ConfluentOrganizationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Confluent.Models.ConfluentProvisionState? provisioningState = default, Guid? organizationId = default, Uri ssoUri = default, Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail offerDetail = default, Azure.ResourceManager.Confluent.Models.ConfluentUserDetail userDetail = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.ConfluentOrganizationData ConfluentOrganizationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Confluent.Models.ConfluentProvisionState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; organizationId, class System.Uri ssoUri, class Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail offerDetail, class Azure.ResourceManager.Confluent.Models.ConfluentUserDetail userDetail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOrganizationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Confluent.Models.ConfluentProvisionState},System.Nullable{System.Guid},System.Uri,Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail,Azure.ResourceManager.Confluent.Models.ConfluentUserDetail)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentOrganizationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ConfluentProvisionState) = Nothing, Optional organizationId As Nullable(Of Guid) = Nothing, Optional ssoUri As Uri = Nothing, Optional offerDetail As ConfluentOfferDetail = Nothing, Optional userDetail As ConfluentUserDetail = Nothing) As ConfluentOrganizationData" />
      <MemberSignature Language="F#" Value="static member ConfluentOrganizationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentProvisionState&gt; * Nullable&lt;Guid&gt; * Uri * Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail * Azure.ResourceManager.Confluent.Models.ConfluentUserDetail -&gt; Azure.ResourceManager.Confluent.ConfluentOrganizationData" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOrganizationData (id, name, resourceType, systemData, tags, location, createdOn, provisioningState, organizationId, ssoUri, offerDetail, userDetail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.ConfluentOrganizationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentProvisionState&gt;" />
        <Parameter Name="organizationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="ssoUri" Type="System.Uri" />
        <Parameter Name="offerDetail" Type="Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail" />
        <Parameter Name="userDetail" Type="Azure.ResourceManager.Confluent.Models.ConfluentUserDetail" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="createdOn"> The creation time of the resource. </param>
        <param name="provisioningState"> Provision states for confluent RP. </param>
        <param name="organizationId"> Id of the Confluent organization. </param>
        <param name="ssoUri"> SSO url for the Confluent organization. </param>
        <param name="offerDetail"> Confluent offer detail. </param>
        <param name="userDetail"> Subscriber detail. </param>
        <summary> Initializes a new instance of ConfluentOrganizationData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.ConfluentOrganizationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
